<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('transactions', function (Blueprint $table) {
            $table->id();

            $table->foreignId('user_id')->nullable()->constrained('users')->onDelete('set null');

            $table->foreignId('building_id')
                ->nullable()
                ->constrained('buildings')
                ->onDelete('set null');

            $table->foreignId('unit_id')
                ->nullable()
                ->constrained('units')
                ->onDelete('set null');

            $table->unsignedBigInteger('amount');
            $table->string('receipt_image')->nullable();

            $table->timestamp('paid_at')->nullable()
                ->comment('Timestamp when the transaction was marked as paid');

            $table->timestamp('redirected_at')->nullable();
            $table->timestamp('verified_at')->nullable();

            // zarinpal transaction info
            $table->string('authority')
                ->nullable()
                ->unique()
                ->comment('Authority code generated by the payment gateway');

            $table->string('transactionID')
                ->nullable()
                ->unique()
                ->comment('Tracking code for the transaction');

            // 'bank_gateway','bank_gateway_zarinpal','bank_gateway_saman','mobile_banking','atm','cash','check'
            // Payment method as ENUM
            $table->enum('payment_method', [
                'bank_gateway_zarinpal',
                'bank_gateway_saman',
                'mobile_banking',
                'atm',
                'cash',
                'check'
            ])->default('mobile_banking');

            $table->string('gateway_name')->nullable();

            $table->enum('transaction_status', [
                'transferred_to_pay',
                'pending_verification',
                'expired',
                'unsuccessful',
                'paid',
                'unpaid',
            ])->default('unpaid')
                ->comment('Status of the transaction (e.g., pending, successful)');

            $table->enum('callback_status', ['OK', 'NOK', 'pending'])->nullable();
            $table->string('card_pan')->nullable();
            $table->string('card_hash')->nullable();
            $table->unsignedBigInteger('fee')->nullable();
            $table->enum('currency', ['IRR', 'IRT'])->default('IRR');
            $table->string('mobile')->nullable();

            $table->enum('transaction_type', ['unit_transaction', 'building_income'])
                ->default('unit_transaction')
                ->comment('Type of transaction (unit-related or building income)');
            $table->enum('target_group', ['resident', 'owner'])
                ->comment('Target group of the transaction (resident or owner)');

            $table->text('description')->nullable()->comment('Description of the income');

            $table->timestamps();
            $table->softDeletes();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('transactions');
    }
};
